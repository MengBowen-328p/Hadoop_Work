Paoxs
大数据21-02 徐慧洁 2021443753

Paox是什么
Paoxs是一种基于消息传递且具有高度容错特性的一致性算法，解决分布式一致性问题，即一个分布式系统中的各个进程如何就某个决议达成一致。
Paoxs的用处
Paxos算法运行在允许宕机故障的异步系统中，不要求可靠的消息传递，可容忍消息丢失、延迟、乱序以及重复。它利用大多数机制保证了2F+1的容错能力，即2F+1个节点的系统最多允许F个节点同时出现故障。一个或多个提议进程可以发起提案，Paxos算法使所有提案中的某一个提案，在所有进程中达成一致。系统中的多数派同时认可该提案，即达成了一致。最多只针对一个确定的提案达成一致。
Paoxs的工作原理
Paoxs的进程分成三个阶段：
    第一阶段：Prepare阶段。Proposer向Acceptors发出Prepare请求，Acceptors针对收到的Prepare请求进行Promise承诺。
    第二阶段：Accept阶段。Proposer收到多数Acceptors承诺的Promise后，向Acceptors发出Propose请求，Acceptors针对收到的Propose请求进行Accept处理。
    第三阶段：Learn阶段。Proposer在收到多数Acceptors的Accept之后，标志着本次Accept成功，决议形成，将形成的决议发送给所有Learners。
    Promise: Acceptors收到Prepare请求后，做出“两个承诺，一个应答”。
    两个承诺：1.不再接受Proposal ID小于等于当前请求的Prepare请求。2.不再接受Proposal ID小于当前请求的Propose请求。
    一个应答：不违背以前作出的承诺下，回复已经Accept过的提案中Proposal ID最大的那个提案的Value和Proposal ID，没有则返回空值。
Paxos将系统中的角色分为提议者 (Proposer)，决策者 (Acceptor)，和最终决策学习者 (Learner)。
Propose: Proposer 收到多数Acceptors的Promise应答后，从应答中选择Proposal ID最大的提案的Value，作为本次要发起的提案。如果所有应答的提案Value均为空值，则可以自己随意决定提案Value，然后携带当前Proposal ID，向所有Acceptors发送Propose请求。
    Accept: Acceptor收到Propose请求后，在不违背自己之前作出的承诺下，接受并持久化当前Proposal ID和提案Value。
    Learn: Proposer收到多数Acceptors的Accept后，决议形成，将形成的决议发送给所有Learners。获取一个Proposal ID n，为了保证Proposal ID唯一，可采用时间戳+Server ID生成。
Proposer向所有Acceptors广播Prepare(n)请求；Acceptor比较n和minProposal，如果n>minProposal，minProposal=n，并且将 acceptedProposal 和 acceptedValue 返回；Proposer接收到过半数回复后，如果发现有acceptedValue返回，将所有回复中acceptedProposal最大的acceptedValue作为本次提案的value，否则可以任意决定本次提案的value；到这里可以进入第二阶段，广播Accept (n,value) 到所有节点；Acceptor比较n和minProposal，如果n>=minProposal，则acceptedProposal=minProposal=n，acceptedValue=value，本地持久化后，返回；否则，返回minProposal。提议者接收到过半数请求后，如果发现有返回值result >n，表示有更新的提议，跳转到1；否则value达成一致。
