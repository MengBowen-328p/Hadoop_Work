Paxos算法的理解
Paxos算法是一种解决分布式系统中的一致性问题的算法，它的核心思想是通过多轮的提议和承诺，让所有的参与者达成一个共同的决定。
Paxos算法中有三种角色，分别是提议者（Proposer）、接收者（Acceptor）和学习者（Learner）。
提案者负责提出提案 (Proposal)，Proposal信息包括提案编号 (Proposal ID) 和提议的值 (Value)。Value可以是任何一系列的抽象操作，不同的提案者可以提出不同的value，但对同一轮的paxose来说，最多只有一个value可以被批准。
接收者可以对提议者提出的提议进行投票表决，接收者之间是完全独立的。提议有超过半数的接收者投票批准即被选中，接受提案后提案里面的value就选定了。
学习者是学习最终决定的节点，它可以是任何需要知道最终决定的节点，例如一个客户端或一个服务端。
Paxos算法的流程可以分为两个阶段，分别是准备阶段（Prepare）和接受阶段（Accept）。Paxos算法的流程可以分为两个阶段，分别是准备阶段（Prepare）和接受阶段（Accept）。在准备阶段，提议者向接收者发送一个带有编号的提议，如果接收者首次接收该提议那么响应ok,若不是首次接收提议请求，如果提议编号N小于等于上次的提议编号，则不响应。若请求编号大于上次的提议编号更新N，同时给出响应，返回ok，并返回自己已经接受过的最大编号的提议；在接受阶段，如果有一半以上的人回复ok，提议者选择一个值作为最终的提议，并向接受者发送该提议，并通知学习者该提议，如果未能有一半以上的人回复ok,那么提议者就需生成更大的提议号，转到准备阶段执行，直到达成一致
Paxos算法的关键是通过多轮的消息交换和投票，保证了多个节点之间的一致性。







