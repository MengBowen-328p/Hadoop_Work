Paxos算法：分布式容错共识算法（在分布式环境下，能够允许部分节点出现故障的情况下，就一组提案中的某个提案达成共识）通俗讲客户端A要把x设置为1，客户端B要把x设置为2。让A和B都认同x等于1或者x等于2的过程就是达成共识。

基本概念
提案是指需要达成共识的某一个值或者某一个操作。Paxos对其封装成一个提案，并为其生成唯一的提案编号[M，V]，M表示提案编号，V表示需要达成共识的值。提案编号，用于标识协商过程中请求的有效性，是一个自增、全局、不唯一的数字。
多数派，超过集群一半成员组成的集合。

Paxos的角色
Proposer（提案者）：接收客户端的请求，将其封装成一个提案，并将提案发给所有的接受者，根据接受者的返回情况控制是否需要提交该提案。
Acceptor（接受者）：根据协商约定参与对提案的投票，接收和处理Prepare阶段和Accept阶段的请求
Learner（学习者）：不参与投票，只被动接受提案结果，用于扩展读写性能
Paxos的阶段
Prepare阶段（争取本轮提出提案的所有权，获取上一轮可能达成已经共识的提案）：Proposer向所有的Acceptor发送Prepare请求（只包含提案编号）[M，]，Acceptor根据提案编号和协商约定判断是否接受该请求，如果Proposer收到了多数派的Acceptor的同意后就获得了本轮提出提案的所有权，可以进行Accept阶段。Acceptor的回应会带有它本地接收过的一个提案。
Accept阶段：Proposer向所有的Acceptor发送Accept请求（包含提案编号和提案值）[M，V]，Acceptor根据提案编号和协商约定决定是否接受该请求。如果Proposer收到了多数派Acceptor接受了该请求，则该提案已经通过，可以进入Learn阶段。
Learn阶段：某个提案通过前两个阶段后由Proposer向分布式系统广播，通知所有成员学习

Paxos协商约定
Acceptor：令自己所见过的最大的提案编号为local.n，请求中的提案编号为msg.n
收到Prepare请求，msg.n>local.n，则通过该请求，否则拒绝该请求，直接抛弃
收到Accept请求，msg.n>=local.n，则通过该请求，否则拒绝该请求，直接抛弃
收到某一Prepare请求时，会在Prepare响应中携带自己批准过的最大提案编号对应的提案值
Proposer：
收到客户端请求，先发起Prepare请求
收到多数派Prepare响应，才可以进入Accept阶段。提案值需要从Prepare响应中获取，若Prepare响应中没有提案值，则自己指定。
收到多数派Accept响应，则该提案达成共识。


