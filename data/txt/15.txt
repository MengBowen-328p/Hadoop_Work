对paxos的认识
Paxos算法是目前公认的解决分布式一致性的算法（使某个值达成一致），被认为是分布式一致性中非常重要的算法之一。
Paxos算法的背景
在我们一个议事厅中分为三个角色，提议者（proposer）、接收者（acceptor）、学习者（learner）。每一个事务变更都需要一个提议，每个提议又是一个编号。当一个提议只有被半数以上的人通过才会被通过。当一个proposer向acceptor发起proposal的时候，我们要保证大多数acceptor接收到确定的值，并且保证大多数acceptor接收到的值是一样的，这个提议才会被通过。但是在分发这些提议的时候我们难免会出现问题，比如接收到了错误的信息，比如当一个议员提出编号1的提议 ，另外一个提出了编号2的提议，但是之前那个议员不满编号2 ，继续提出编号3，这样下去就会产生冲突，因为资源是有限的，不能一直无限的更新，这样会导致之前的提议都不是最优的，这个时候就需要一个leader来领导。
Paxos算法的几个阶段
proposer：向acceptor提出提议（有编号），Acceptor接收，如果已经接收比这个编号更高的提议就会被拒绝。
Acceptor:proposer收到大多数acceptor的prepare的应答，如果有意境接收的就选出编号最大的提议。然后acceptor接收到accept请求，如果接收到的请求比之前接收过的编号小，就拒绝，反之接受。
Learner:Acceptor达到一致就将这个结果给所有learner。
Paxos算法解决了什么问题
机器宕机无法工作了
网络异常导致出现了问题
以上两个中问题都会导致消息有误，此时就需要paxos算法来帮助解决问题。
Paxos算法特点：
（1）基于消息的传递
（2）高度容错
总结：
为什么要使用paxos:每个人的权利相等，会互相驳回意见，产生冲突，这种冲突在人人都平等的条件下是不可调节的。
Paxos是什么：是一种基于小徐传递且具有高度容错性的一致性算法
怎么做：解决这种冲突即在每个节点中产生一个优先级leader。
