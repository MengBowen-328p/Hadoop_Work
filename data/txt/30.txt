
对Paxos算法的理解
Paxos算法作为一种以信息传输为基础并具备强大抗故障特性的统一性方法，被广泛认为是最有效地处理分布式一致性问题的手段之一。该算法假设所有的设置都同等重要，进而探讨了各个进程如何对某一特定值(决策)达成共识。然而，由于其传递性质可能受到设备停机或网络异常等因素影响，因此可能会出现一些问题。
Paxos算法将系统中的三个角色分为提议者 (proposer)，接收者 (acceptor)，和领导者 (learners)。该算法对于安全的保障包含以下几点：首先，只能由被提出的值来决定选择结果;其次，仅有一个值会被最终确定下来;最后，一旦某一进程认定某种值已被确立为选择对象，则这种价值实际上已经被确认并选择了。这样做的最终目标是保证最终一个value进程最终获取被选中的value。
当Proposers把他们的建议提交给Acceptors时，他们需要确保最少有一个选择结果能够得到通过;并且每一个Acceptor只可以批准一种选项。此外，以防止没有明确的选择出现的情况发生，因此 Paxos协议规定了如下规则来保障这个原则得以实现，为了保证必须有值会被接受，所以Paxos算法中：P1：如果某个value=v选定，编号更高的被选定提案的value。;P2：如果值为value=v的Proposal被选，则任何被选定的具有更高编号的Proposal值也一定为v。P2a：如果某个value=v的被选定，那么每个编号更高的accepter接受的提案value=v。P2b：如果某个value=v的Proposal被选定，那么之后对所有的Proposer它们提出的任何具有编号更高的提案的值也必须为v。P2c：对任意的N和V，如果提案[N，V]提出，那么一定存在一个半数以上的Accepter组式集合S满足以下的的条件，满足(1) ：S中每个Accepter都没有接受过编号小于N，或者(2) S中Accepter接受过的最大编号的提案的value=v。P1a：只要一个接收者还没有对编号大于n的预先请求作出反应，那么他就可以接纳这个编号为n的提议。
以上就是我对Paxos算法的一些理解。



