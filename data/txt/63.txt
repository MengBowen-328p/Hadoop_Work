对Paxos的认识和理解：
Paxos是Zookeeper为了实现消息一致性而提出的算法，Paxos算法基于机器宕机和网络异常等问题，实现了消息传递和高度容错的一致性。
Paxos算法假设议员人人平等，每个议员都可以发起提议。议员的角色分为三类：proposers(提案者)，acceptors（接受者）,learners（学习者）。在具体实现中，一个进程可能扮演不止一个角色。Proposers就是在选举中提出提案的人，一切的提议都由proposers提出来，一个提案就会产生一个value。在论文《Paxos made simple》中写道，如果proposer接受了来自一个majority对于请求的回复，那么它就可以发送一个number为n，value为v的proposal。Acceptor就是提案的批准者，他们之间的关系是完全平等且独立的，每个acceptor都享有平等的权利，一个acceptor必须接受不止一个提案，且acceptor必须接受第一个它收到的proposal。如果一个acceptor收到一个编号为N的提案，只要acceptor没有对大于N的value做出过回应，则接受提案。Learners就是提案的学习者，它不参与选举过程，而是学习最终被批准的value，即学习最终的提案内容并且把提案记录下来。
Paxos采取了一个我们非常熟悉的达成共识的方法：少数服从多数。当超过半数的议员同意此提案时，提案通过。Paxos的最终目标就是保证最终只有一个value被选中。为了保证提案的安全性，只有被选中的value才可被选定且只有一个value被选定，当某个进程认为某个value被选定，则此value才是真的选定。
