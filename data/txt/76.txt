对Paxos算法的理解
Paxos是一个分布式一致性算法，是一种基于消息传递且具有高度容错特性的一致性算法，他一共有三个角色，分别是Proposer、Acceptor和Leaner。在分布式系统中，它是一种很重要的数据结构。
他的优点：它允许所有的节点都参与到共识中来，这样就减少了系统中的拥塞，并且在一定程度上减少了系统的复杂度。由于每个节点都有参与共识的机会，所以不会因为一个节点不出票而使整个系统瘫痪。由于所有节点都参与到了共识中来，因此就能避免共识过程中的作弊行为。
他的安全性要求：1、只有被提出的value才可被选定2、只有一个value被选定3、当某个进程认为某个value已被选定，那么这个value必须被真实选定。
其最终目的是为了对某个值/日志/命令达成一致。
该算法的流程如下：
第一阶段:
1.P选择一个编号为n的提议向A发送P请求（要求半数以上）。
2.设想有一A获得了一P请求，其标号是n，而且N大于此前A应答过的所有P建议的标号，此时他会把过去接收到的标号中的最高提案作为回应反馈给提案者，并确保不会再接受标号小于V的提案。
第二阶段：
1.如果P收到了半数以上的A对Pro的请求的响应，他就会发送一个[N,V]的提案给半数以上的A。
2.如果A收到了编号为N的A请求，只要该A没有对编号为N的Proposer请求响应过，就接受A请求。
他为什么可以实现数据同步？
1.Paxos算法本身有一套完整的通信机制，它把数据同步分成了许多小块（例如一次提交，一次验证）；
2.通过共识机制来决定数据是否被同步；
3.在网络中存在许多单点故障是指在一个节点出现故障或被攻击时，会影响整个系统的运行），Paxos算法通过在整个网络中设置多个节点进行故障切换来提高系统的可用性。

